@page "/leaderboard"

<h3>Leaderboard</h3>

@if (leaderboard == null)
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}
else
{
    <MudSimpleTable Dense="@true" Bordered="@true" Style="width:40rem">
        <thead>
            <tr>
                <th class="posCol">Pos</th>
                <th class="nameCol">Name</th>
                <th class="hcpCol">Hcp</th>
                <th class="grossCol">Total</th>
                <th class="netCol">Kings</th>
                <th class="netCol">Dumb</th>
                <th class="netCol">Castle</th>
                <th class="netCol">Old</th>
                <th class="netCol">Carn</th>
                <th class="moneyCol">$</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var entry in leaderboard.Entries.OrderBy(e => e.Pos))
            {
                <tr>
                    <td class="posCol">@Utilities.DisplayPos(entry.Pos)</td>
                    <td class="nameCol">@entry.Name</td>
                    <td class="hcpCol">@entry.Hcp</td>
                    <td class="grossCol @Utilities.NetClass(entry.Total)">@Utilities.DisplayNet(entry.Pos, entry.Total)</td>
                    <td class="netCol @Utilities.NetClass(entry.Round1)">@Utilities.DisplayNet(entry.Pos, entry.Round1)</td>
                    <td class="netCol @Utilities.NetClass(entry.Round2)">@Utilities.DisplayNet(entry.Pos, entry.Round2)</td>
                    <td class="netCol @Utilities.NetClass(entry.Round3)">@Utilities.DisplayNet(entry.Pos, entry.Round3)</td>
                    <td class="netCol @Utilities.NetClass(entry.Round4)">@Utilities.DisplayNet(entry.Pos, entry.Round4)</td>
                    <td class="netCol @Utilities.NetClass(entry.Round5)">@Utilities.DisplayNet(entry.Pos, entry.Round5)</td>
                    <td class="moneyCol">@Utilities.DisplayWinnings(entry.Winnings)</td>
                </tr>
            }
        </tbody>
    </MudSimpleTable>
}

@code {
    [Inject]
    public IDataService dataService { get; set; } = default!;


    private Leaderboard? leaderboard;

    protected override async Task OnInitializedAsync()
    {
        leaderboard = await dataService.GetLeaderboardAsync();
    }

}

