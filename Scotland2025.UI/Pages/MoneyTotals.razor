@page "/moneytotals"
@using Scotland2025.Application.Lottery
@using Scotland2025.Application.MoneyTotals
@using Scotland2025.UI.Abstractions.Data

<PageTitle>Money Totals</PageTitle>

<h3>Money Totals</h3>

@if (moneyTotals == null)
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}
else
{
    <MudSimpleTable Dense="@true" Bordered="@true" Style="width:60rem">
        <thead>
            <tr>
                <th class="name">Name</th>
                <th>Individual</th>
                <th>Team</th>
                <th>Scats</th>
                <th>Closest</th>
                <th>Championship</th>
                <th>Lottery</th>
                <th>Total</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var entry in moneyTotals)
            {
                <tr>
                    <td class="name">@entry.Name</td>
                    <td>@Utilities.DisplayWinnings(entry.TotalIndividual)</td>
                    <td>@Utilities.DisplayWinnings(entry.TotalTeam)</td>
                    <td>@Utilities.DisplayWinnings(entry.TotalScats)</td>
                    <td>@Utilities.DisplayWinnings(entry.TotalClosest)</td>
                    <td>@Utilities.DisplayWinnings(entry.IndividualChampionship)</td>
                    <td>@Utilities.DisplayWinnings(entry.Lottery)</td>
                    <td>@Utilities.DisplayWinnings(entry.Total)</td>
                </tr>
            }
        </tbody>

    </MudSimpleTable>
}

@code {
    [Inject]
    public IDataService dataService { get; set; } = default!;

    private IList<MoneyTotalEntry>? moneyTotals;

    //PaginationState pagination = new PaginationState() { ItemsPerPage = 2 };

    //private RenderFragment template = @<span />;

    protected override async Task OnInitializedAsync()
    {
        moneyTotals = await dataService.GetMoneyTotalsAsync();
    }

}
