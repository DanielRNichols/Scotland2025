@if(ResultsPosted())
{
    <MudSimpleTable Class="scorecard mb-3" Dense="@true" Bordered="@true" Outlined="@true">
        <thead>
            <tr>
                <th class="tableheader" colspan="24">@title</th>
            </tr>
        </thead>
        <tbody>
            <tr class="scorecardholes">
                <td class="scorecardheader" colspan="2">Hole</td>
                <td>1</td>
                <td>2</td>
                <td>3</td>
                <td>4</td>
                <td>5</td>
                <td>6</td>
                <td>7</td>
                <td>8</td>
                <td>9</td>
                <td>Front</td>
                <td>10</td>
                <td>11</td>
                <td>12</td>
                <td>13</td>
                <td>14</td>
                <td>15</td>
                <td>16</td>
                <td>17</td>
                <td>18</td>
                <td>Back</td>
                <td>Total</td>
                <td>Net</td>
            </tr>
            <tr class="scorecardhcps">
                <td class="scorecardheader" colspan="2">Hcp</td>
                <td>@scorecard.Hcp1</td>
                <td>@scorecard.Hcp2</td>
                <td>@scorecard.Hcp3</td>
                <td>@scorecard.Hcp4</td>
                <td>@scorecard.Hcp5</td>
                <td>@scorecard.Hcp6</td>
                <td>@scorecard.Hcp7</td>
                <td>@scorecard.Hcp8</td>
                <td>@scorecard.Hcp9</td>
                <td></td>
                <td>@scorecard.Hcp10</td>
                <td>@scorecard.Hcp11</td>
                <td>@scorecard.Hcp12</td>
                <td>@scorecard.Hcp13</td>
                <td>@scorecard.Hcp14</td>
                <td>@scorecard.Hcp15</td>
                <td>@scorecard.Hcp16</td>
                <td>@scorecard.Hcp17</td>
                <td>@scorecard.Hcp18</td>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr class="scorecardpars">
                <td class="scorecardheader" colspan="2">Par</td>
                <td>@scorecard.Par1</td>
                <td>@scorecard.Par2</td>
                <td>@scorecard.Par3</td>
                <td>@scorecard.Par4</td>
                <td>@scorecard.Par5</td>
                <td>@scorecard.Par6</td>
                <td>@scorecard.Par7</td>
                <td>@scorecard.Par8</td>
                <td>@scorecard.Par9</td>
                <td>@scorecard.ParFront</td>
                <td>@scorecard.Par10</td>
                <td>@scorecard.Par11</td>
                <td>@scorecard.Par12</td>
                <td>@scorecard.Par13</td>
                <td>@scorecard.Par14</td>
                <td>@scorecard.Par15</td>
                <td>@scorecard.Par16</td>
                <td>@scorecard.Par17</td>
                <td>@scorecard.Par18</td>
                <td>@scorecard.ParBack</td>
                <td>@scorecard.ParTotal</td>
                <td></td>
           </tr>
           <tr class="scorecardgroups">
                <td colspan="24">Group 1</td>
           </tr>
            @{
                index = 0;
            }
            @foreach(var scores in individualScores!.OrderBy(x => x.TeeSlot))
            {
                <tr class="scorecardscores">
                    <td class=@($"team{scores.Team} scorecardplayername")>@scores.Name</td>
                    <td class=@($"team{scores.Team} scorecardplayerhcp")>@scores.Hcp</td>
                    <td class=@ScoreClass(scores.Hole1, scorecard.Par1)>@Utilities.DisplayGross(scores.Hole1)</td>
                    <td class=@ScoreClass(scores.Hole2, scorecard.Par2)>@Utilities.DisplayGross(scores.Hole2)</td>
                    <td class=@ScoreClass(scores.Hole3, scorecard.Par3)>@Utilities.DisplayGross(scores.Hole3)</td>
                    <td class=@ScoreClass(scores.Hole4, scorecard.Par4)>@Utilities.DisplayGross(scores.Hole4)</td>
                    <td class=@ScoreClass(scores.Hole5, scorecard.Par5)>@Utilities.DisplayGross(scores.Hole5)</td>
                    <td class=@ScoreClass(scores.Hole6, scorecard.Par6)>@Utilities.DisplayGross(scores.Hole6)</td>
                    <td class=@ScoreClass(scores.Hole7, scorecard.Par7)>@Utilities.DisplayGross(scores.Hole7)</td>
                    <td class=@ScoreClass(scores.Hole8, scorecard.Par8)>@Utilities.DisplayGross(scores.Hole8)</td>
                    <td class=@ScoreClass(scores.Hole9, scorecard.Par9)>@Utilities.DisplayGross(scores.Hole9)</td>
                    <td class="scorecardfrontscores">@Utilities.DisplayGross(scores.Front)</td>
                    <td class=@ScoreClass(scores.Hole10, scorecard.Par10)>@Utilities.DisplayGross(scores.Hole10)</td>
                    <td class=@ScoreClass(scores.Hole11, scorecard.Par11)>@Utilities.DisplayGross(scores.Hole11)</td>
                    <td class=@ScoreClass(scores.Hole12, scorecard.Par12)>@Utilities.DisplayGross(scores.Hole12)</td>
                    <td class=@ScoreClass(scores.Hole13, scorecard.Par13)>@Utilities.DisplayGross(scores.Hole13)</td>
                    <td class=@ScoreClass(scores.Hole14, scorecard.Par14)>@Utilities.DisplayGross(scores.Hole14)</td>
                    <td class=@ScoreClass(scores.Hole15, scorecard.Par15)>@Utilities.DisplayGross(scores.Hole15)</td>
                    <td class=@ScoreClass(scores.Hole16, scorecard.Par16)>@Utilities.DisplayGross(scores.Hole16)</td>
                    <td class=@ScoreClass(scores.Hole17, scorecard.Par17)>@Utilities.DisplayGross(scores.Hole17)</td>
                    <td class=@ScoreClass(scores.Hole18, scorecard.Par18)>@Utilities.DisplayGross(scores.Hole18)</td>
                    <td class="scorecardbackscores">@Utilities.DisplayGross(scores.Back)</td>
                    <td class="scorecardtotalscores">@Utilities.DisplayGross(scores.Total)</td>
                    <td class="scorecardnetscores @Utilities.NetClass(scores.Net)">@Utilities.NetDisplay(scores.Net)</td>
                </tr>
                if(index == 3)
                {
                    <tr class="scorecardgroups">
                        <td colspan="24">Group 2</td>
                    </tr>
                }

                index++;
            }
        </tbody>
    </MudSimpleTable>
}
else
{
    <ResultsNotPosted />
}

@code {
    [Parameter] public string title { get; set; } = string.Empty;
    [Parameter] public string round { get; set; } = string.Empty;
    [Parameter] public Scorecard? scorecard { get; set; }
    [Parameter] public IList<IndividualScores>? individualScores { get; set; }

    private int index = 0;

    private string ScoreClass(int score, int par) => (score - par) switch
    {
        >= 3 => "maxi",
        2 => "double",
        1 => "bogey",
        0 => "par",
        -1 => "birdie",
        -2 => "eagle",
        <= -3 => "unknown"
    };

    private bool ResultsPosted() => scorecard != null && individualScores != null && individualScores.Any();

}