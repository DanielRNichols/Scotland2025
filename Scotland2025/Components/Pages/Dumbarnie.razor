@page "/dumbarnie"

<PageTitle>Dumbarnie</PageTitle>

<div class="mt-5"></div>
<CourseScorecard title="Dumbarnie Scores" round="Round 2" scorecard="@scorecard" individualScores="@indScores" />
<Divider />
<IndividualResults title="Dumbarnie Daily Individual" results="@indResults" />
<Divider />
<ClosestToHoleResults title="Dumbarnie Closest to Hole" results="@closestToHoleResults" />
<Divider />
<MatchPlayResults title="Dumbarnie Match Play" results="@matches" />
<Divider />
<Scats title="Dumbarnie Scats" round="Round 2" scorecard="@scorecard" scats="@scats" scatCalcs="@scatCalculations" scatStats="@scatStats"/>


@code {

    [Inject]
    public IDataService dataService { get; set; } = default!;

    private IList<DailyIndividualEntry>? indResults { get; set; } = new List<DailyIndividualEntry>();
    private IList<ClosestToHoleEntry>? closestToHoleResults { get; set; } = new List<ClosestToHoleEntry>();
    private IList<MatchPlayMatch>? matches { get; set; } = new List<MatchPlayMatch>();
    private IList<DailyScatsEntry>? scats { get; set; } = new List<DailyScatsEntry>();
    private IList<DailyScatCalculationEntry>? scatCalculations { get; set; } = new List<DailyScatCalculationEntry>();
    private DailyScatStats? scatStats { get; set; } = new DailyScatStats();
    private Scorecard scorecard { get; set; } = new Scorecard();
    private IList<IndividualScores> indScores { get; set; } = new List<IndividualScores>();

    private string key = "dumbarnie";

    protected override async Task OnInitializedAsync()
    {
        indResults = await dataService.GetDailyIndividualAsync(key);
        closestToHoleResults = await dataService.GetClosestToHoleAsync(key);
        matches = await dataService.GetMatchPlayAsync(key);
        scats = await dataService.GetDailyScatsAsync(key);
        scatStats = await dataService.GetDailyScatStatsAsync(key);
        scatCalculations = await dataService.GetDailyScatCalculationsAsync(key);
        scorecard = await dataService.GetScorecardAsync(key);
        indScores = await dataService.GetIndividualScoresAsync(key);
    }
}
