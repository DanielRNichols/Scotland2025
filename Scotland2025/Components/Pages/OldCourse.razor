@page "/oldcourse"

<PageTitle>Old Course</PageTitle>

<IndividualResults title="Old Course Daily Individual" results="@indResults" />
<ClosestToHoleResults title="Old Course Closest to Hole" results="@closestToHoleResults" />
<BestBallNetResults title="Old Course Best Ball Net" results="@bestBallNetResults" />
<CourseScorecard title="Old Course Scores" round="Round 4" scorecard="@scorecard" individualScores="@indScores" />
<Scats title="Old Course Scats" round="Round 4" scorecard="@scorecard" scats="@scats" scatCalcs="@scatCalculations" />


@code {

    [Inject]
    public IDataService dataService { get; set; } = default!;

    private IList<DailyIndividualEntry>? indResults { get; set; } = new List<DailyIndividualEntry>();
    private IList<ClosestToHoleEntry>? closestToHoleResults { get; set; } = new List<ClosestToHoleEntry>();
    private IList<BestBallNetTeam>? bestBallNetResults { get; set; } = new List<BestBallNetTeam>();
    private IList<DailyScatsEntry>? scats { get; set; } = new List<DailyScatsEntry>();
    private IList<DailyScatCalculationEntry>? scatCalculations { get; set; } = new List<DailyScatCalculationEntry>();
    private Scorecard scorecard { get; set; } = new Scorecard();
    private IList<IndividualScores> indScores { get; set; } = new List<IndividualScores>();

    private string key = "oldcourse";

    protected override async Task OnInitializedAsync()
    {
        indResults = await dataService.GetDailyIndividualAsync(key);
        closestToHoleResults = await dataService.GetClosestToHoleAsync(key);
        bestBallNetResults = await dataService.GetBestBallNetTeamsAsync(key);
        scats = await dataService.GetDailyScatsAsync(key);
        scatCalculations = await dataService.GetDailyScatCalculationsAsync(key);
        scorecard = await dataService.GetScorecardAsync(key);
        indScores = await dataService.GetIndividualScoresAsync(key);
    }
}
