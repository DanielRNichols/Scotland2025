@page "/leaderboard"
@using Scotland2025.Application.Leaderboard
<h3>Leaderboard</h3>

@if (leaderboard == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th class="posCol">Pos</th>
                <th class="nameCol">Name</th>
                <th class="hcpCol">Hcp</th>
                <th class="grossCol">Total</th>
                <th class="netCol">R1</th>
                <th class="netCol">R2</th>
                <th class="netCol">R3</th>
                <th class="netCol">R4</th>
                <th class="netCol">R5</th>
                <th class="moneyCol">$</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var entry in leaderboard.Entries.OrderBy(e => e.Pos))
            {
                <tr>
                    <td class="posCol">@Utilities.DisplayPos(entry.Pos)</td>
                    <td class="nameCol">@entry.Name</td>
                    <td class="hcpCol">@entry.Hcp</td>
                    <td class="totalCol @Utilities.NetClass(entry.Total)">@Utilities.DisplayNet(entry.Pos, entry.Total)</td>
                    <td class="netCol @Utilities.NetClass(entry.Round1)">@Utilities.DisplayNet(entry.Pos, entry.Round1)</td>
                    <td class="netCol @Utilities.NetClass(entry.Round2)">@Utilities.DisplayNet(entry.Pos, entry.Round2)</td>
                    <td class="netCol @Utilities.NetClass(entry.Round3)">@Utilities.DisplayNet(entry.Pos, entry.Round3)</td>
                    <td class="netCol @Utilities.NetClass(entry.Round4)">@Utilities.DisplayNet(entry.Pos, entry.Round4)</td>
                    <td class="netCol @Utilities.NetClass(entry.Round5)">@Utilities.DisplayNet(entry.Pos, entry.Round5)</td>
                    <td class="moneyCol">@Utilities.DisplayWinnings(entry.Winnings)</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Inject]
    private ISender Sender { get; set; } = default!;

    private Leaderboard? leaderboard;

    protected override async Task OnInitializedAsync()
    {
        var getLeaderboardQuery = new GetLeaderboardQuery();
        var result = await Sender.Send(getLeaderboardQuery);
        if (result.IsError)
        {
            // Handle error here
            return;
        }

        leaderboard = result.Value;
    }

}
