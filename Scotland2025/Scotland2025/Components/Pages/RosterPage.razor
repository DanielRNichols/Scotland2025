@page "/roster"
@using MediatR
@using Scotland2025.Application.Roster
@rendermode InteractiveServer

<PageTitle>Roster</PageTitle>

<h1>Roster</h1>

@if (players == null)
{
    <p><em>Loading...</em></p>
}
else
{

    <div style="width:300px; display:flex;">
        <FluentDataGrid @ref="grid"
                        Items="@SortedPlayers"
                        GridTemplateColumns="1fr 0.5fr">
            <PropertyColumn Property="@(c => c.Name)" Sortable="true" />
            <PropertyColumn Property="@(c => c.Hcp)" Sortable="true" />
        </FluentDataGrid>
    </div>

}

@code {
    [Inject]
    private ISender Sender { get; set; } = default!;

    private IList<RosterEntry>? players;

    FluentDataGrid<RosterEntry>? grid;


    protected override async Task OnInitializedAsync()
    {
        var getRosterQuery = new GetRosterQuery();
        var result = await Sender.Send(getRosterQuery);
        if (result.IsError)
        {
            // Handle error here
            return;
        }

        players = result.Value;
    }

    IQueryable<RosterEntry>? SortedPlayers => players?.OrderBy(p => p.Hcp).AsQueryable<RosterEntry>();
}
